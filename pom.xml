<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.github.Treehopper</groupId>

  <artifactId>mellifluent-spoon</artifactId>
  <version>${revision}</version>
  <packaging>jar</packaging>

  <licenses>
    <license>
      <name>Apache 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <properties>
    <java.version>11</java.version>
    <junit5.platform.version>1.7.1</junit5.platform.version>
    <junit5.version>5.7.1</junit5.version>
    <maven.compiler.source>${java.version}</maven.compiler.source>
    <maven.compiler.target>${java.version}</maven.compiler.target>
    <mellifluent.maven.plugin.version>1.12.5</mellifluent.maven.plugin.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <spoon.version>7.6.0</spoon.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>fr.inria.gforge.spoon</groupId>
      <artifactId>spoon-core</artifactId>
      <version>${spoon.version}</version>
    </dependency>
  </dependencies>

  <repositories>
    <repository>
      <id>maven-eclipse-repo</id>
      <url>http://maven-eclipse.github.io/maven</url>
    </repository>
  </repositories>

  <pluginRepositories>
    <pluginRepository>
      <id>jitpack.io</id>
      <url>https://jitpack.io</url>
    </pluginRepository>
  </pluginRepositories>

  <build>
    <plugins>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>3.3.0</version>
        <executions>
          <execution>
            <id>add-source</id>
            <goals>
              <goal>add-source</goal>
            </goals>
            <phase>process-sources</phase>
            <configuration>
              <sources>
                <source>${project.build.directory}/generated-sources/java</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>license-maven-plugin</artifactId>
        <version>2.0.0</version>
        <configuration>
          <addJavaLicenseAfterPackage>false</addJavaLicenseAfterPackage>
          <addJavaLicenseAfterPackage>false</addJavaLicenseAfterPackage>
          <licenseName>apache_v2</licenseName>
          <organizationName>hohenegger.eu</organizationName>
          <copyrightOwners>Max Hohenegger &lt;mellifluent@hohenegger.eu&gt;</copyrightOwners>
          <inceptionYear>2021</inceptionYear>
        </configuration>
        <executions>
          <execution>
            <id>download</id>
            <goals>
              <goal>download-licenses</goal>
            </goals>
            <phase>prepare-package</phase>
            <configuration>
              <licensesOutputDirectory>${project.build.directory}/classes/licenses</licensesOutputDirectory>
              <licensesOutputFile>${project.build.directory}/classes/licenses.xml</licensesOutputFile>
            </configuration>
          </execution>
          <execution>
            <id>headers</id>
            <goals>
              <goal>update-file-header</goal>
            </goals>
            <phase>process-sources</phase>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.10.1</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>3.2.1</version>
        <executions>
          <execution>
            <goals>
              <goal>jar-no-fork</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.github.Treehopper</groupId>
        <artifactId>mellifluent-maven-plugin</artifactId>
        <version>${mellifluent.maven.plugin.version}</version>
        <executions>
          <execution>
            <id>generate-fluent-declaration</id>
            <goals>
              <goal>generate-fluent</goal>
            </goals>
            <configuration>
              <excludeGroupIds>com.fasterxml.jackson,com.martiansoftware,org.eclipse.jdt,org.eclipse.platform,log4j,commons-io,org.apache.maven,org.codehaus.plexus,org.apache.commons,org.tukaani,org.apache.commons,org.apache.maven.shared,org.apache.maven.shared,org.codehaus.plexus</excludeGroupIds>
              <packageName>spoon.support.reflect.declaration</packageName>
              <targetPackage>eu.hohenegger.mellifluent.spoon.support.reflect.declaration</targetPackage>
              <excludes>
                <exclude>CtCompilationUnitImpl</exclude>
                <!-- Set<CtTypeReference<? extends Throwable>> ThrownTypes vs Set ThrownTypes  -->
                <exclude>CtAnonymousExecutableImpl</exclude>
              </excludes>
            </configuration>
          </execution>
          <execution>
            <id>generate-fluent-reference</id>
            <goals>
              <goal>generate-fluent</goal>
            </goals>
            <configuration>
              <excludeGroupIds>com.fasterxml.jackson,com.martiansoftware,org.eclipse.jdt,org.eclipse.platform,log4j,commons-io,org.apache.maven,org.codehaus.plexus,org.apache.commons,org.tukaani,org.apache.commons,org.apache.maven.shared,org.apache.maven.shared,org.codehaus.plexus</excludeGroupIds>
              <packageName>spoon.support.reflect.reference</packageName>
              <targetPackage>eu.hohenegger.mellifluent.spoon.support.reflect.reference</targetPackage>
            </configuration>
          </execution>
          <execution>
            <id>generate-fluent-code</id>
            <goals>
              <goal>generate-fluent</goal>
            </goals>
            <configuration>
              <excludeGroupIds>com.fasterxml.jackson,com.martiansoftware,org.eclipse.jdt,org.eclipse.platform,log4j,commons-io,org.apache.maven,org.codehaus.plexus,org.apache.commons,org.tukaani,org.apache.commons,org.apache.maven.shared,org.apache.maven.shared,org.codehaus.plexus</excludeGroupIds>
              <packageName>spoon.support.reflect.code</packageName>
              <targetPackage>eu.hohenegger.mellifluent.spoon.support.reflect.code</targetPackage>
              <excludes>
                <!-- NPE in spoon -->
                <exclude>CtSuperAccessImpl</exclude>
                <!-- CtInvocationImplBuilder.java:[152,26] incompatible types: T cannot be converted to spoon.reflect.code.CtExpression -->
                <exclude>CtInvocationImpl</exclude>
                <!-- CtJavaDocTagImplBuilder.java:[108,21] incompatible types: java.lang.String cannot be converted to spoon.reflect.code.CtJavaDocTag.TagType  -->
                <exclude>CtJavaDocTagImpl</exclude>
                <!-- type error setTarget, setParent -->
                <exclude>CtNewClassImpl</exclude>
                <exclude>CtCaseImpl</exclude>
                <!-- T Value -->
                <exclude>CtLiteralImpl</exclude>
                <exclude>CtExecutableReferenceExpressionImpl</exclude>
                <exclude>CtExecutableReferenceExpressionImpl</exclude>
              </excludes>
            </configuration>
          </execution>

          <execution>
            <id>assisted-generate-fluent</id>
            <goals>
              <goal>assisted-generate-fluent</goal>
            </goals>
            <configuration>
              <sourcePackage>eu.hohenegger.mellifluent.generator.model</sourcePackage>
              <targetPackage>eu.hohenegger.mellifluent.generator.api</targetPackage>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>com.diffplug.spotless</groupId>
        <artifactId>spotless-maven-plugin</artifactId>
        <version>2.26.0</version>
        <configuration>
          <java>
            <!-- These are the defaults, you can override if you want -->
            <includes>
              <include>src/main/java/**/*.java</include>
              <include>src/test/java/**/*.java</include>
              <include>target/generated-sources/java/**/*.java</include>
            </includes>
            <importOrder></importOrder>
            <removeUnusedImports></removeUnusedImports>
            <googleJavaFormat>
              <version>1.8</version>
              <style>GOOGLE</style>
              <reflowLongStrings>true</reflowLongStrings>
            </googleJavaFormat>

            <licenseHeader>
              <file>${project.basedir}/license-header.txt</file>
            </licenseHeader>
          </java>
          <pom>
            <sortPom>
              <encoding>UTF-8</encoding>
              <lineSeparator>\n</lineSeparator>
              <keepBlankLines>true</keepBlankLines>
              <nrOfIndentSpace>2</nrOfIndentSpace>
              <indentBlankLines>false</indentBlankLines>
              <indentSchemaLocation>false</indentSchemaLocation>
              <sortDependencies>scope,artifactId,groupId</sortDependencies>
              <sortDependencyExclusions>artifactId,groupId</sortDependencyExclusions>
              <sortPlugins>artifactId,groupId</sortPlugins>
              <sortProperties>true</sortProperties>
              <sortModules>true</sortModules>
              <sortExecutions>false</sortExecutions>
            </sortPom>
          </pom>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>apply</goal>
            </goals>
            <phase>process-sources</phase>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
